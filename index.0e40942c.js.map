{"mappings":"AAQAA,QAAQC,KCAOC,eAAyBC,EAASC,EAASC,GAKxD,aAJuBC,MAAMC,IAC3B,sFDDJ,MAAMC,EAAUC,SAASC,cAAc,uBACvCV,QAAQC,IAAIO","sources":["src/index.js","src/customFunction/fetchFilm.js"],"sourcesContent":["// Пример API-запроса\n// https://api.themoviedb.org/3/movie/550?api_key=5b1449ced393d87bc0a1ea0f9fb4bc3e\n// Ключ доступа к API (v4 auth)\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YjE0NDljZWQzOTNkODdiYzBhMWVhMGY5ZmI0YmMzZSIsInN1YiI6IjYzNWY3NTUxZmQ2MzAwMDA3ZTQxMjVjMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.P3fo7W5oJivOLLLkTLHz-lJyPLm6HrltkGk1AYGw33I\n\nimport fetchFilm from \"./customFunction/fetchFilm\";\n// const KEY = \"5b1449ced393d87bc0a1ea0f9fb4bc3e\";\n\nconsole.log(fetchFilm);\nconst inputEL = document.querySelector(\".search-form__input\")\nconsole.log(inputEL);\n\n// import { Notify } from 'notiflix';\n// import { Report } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n// import SimpleLightbox from 'simplelightbox';\n// import fetchPhotos from './customFunction/fetchPhotos';\n// import createSmallImgMarkup from './customFunction/funcrionRender';\n// import cleanRender from './customFunction/functionCleanRender';\n// import './css/styles.css';\nimport '../css/index.css';\n// const lightbox = new SimpleLightbox('.gallery__link', { showCounter: false });\n// // -----------------\n\n// // -------------------\n\n// // const optionsObserv = {\n// //   root: null,\n// //   rootMargin: '30px',\n// //   threshold: 1,\n// // };\n// //const observer = new IntersectionObserver(onLoad, optionsObserv);\n// let page;\n// let perPage = 40;\n// let totalPage;\n// let totalHitsPhotos;\n// let inputValue = '';\n\n// const optionsNotify = {\n//   position: 'center-bottom',\n//   showOnlyTheLastOne: true,\n//   timeout: 4000,\n// };\n// const refs = {\n//   formEl: document.querySelector('.search-form'),\n//   galleryEl: document.querySelector('.gallery'),\n//   guardEl: document.querySelector('.guard'),\n//   loadMoreBtnEl: document.querySelector('.load-more'),\n// };\n// refs.formEl.addEventListener('submit', onFormSubmit);\n// refs.loadMoreBtnEl.addEventListener('click', onLoad);\n// // -------------------\n// refs.loadMoreBtnEl.setAttribute('hidden', true);\n// //--------------------\n// function onFormSubmit(evt) {\n//   evt.preventDefault();\n//   refs.loadMoreBtnEl.setAttribute('hidden', true);\n\n//   window.scrollTo(top);\n//   page = 1;\n\n//   inputValue = evt.target.elements.searchQuery.value.toLowerCase().trim();\n//   if (inputValue === '') {\n//     cleanRender(refs.galleryEl);\n//     Report.info('Please', 'Fill in the search field!', 'Okay', {\n//       backOverlayClickToClose: true,\n//     });\n//     return;\n//   }\n\n//   fetchPhotos(inputValue, perPage, page)\n//     .then(response => {\n//       cleanRender(refs.galleryEl);\n\n//       if (response.data.total === 0) {\n//         refs.loadMoreBtnEl.setAttribute('hidden', true);\n//         Report.warning(\n//           'Sorry',\n//           'There are no images matching your search query. Please try again.',\n//           'Okay',\n//           {\n//             backOverlayClickToClose: true,\n//           }\n//         );\n//         return;\n//       }\n\n//       refs.loadMoreBtnEl.removeAttribute('hidden');\n//       totalPage = Math.ceil(response.data.totalHits / perPage);\n//       totalHitsPhotos = response.data.totalHits;\n\n//       Notify.success(`Hooray! We found ${response.data.totalHits} images.`, {\n//         showOnlyTheLastOne: true,\n//       });\n//       const imgMarkUp = createSmallImgMarkup(response.data.hits);\n//       refs.galleryEl.insertAdjacentHTML('beforeend', imgMarkUp);\n\n//       lightbox.refresh();\n//       if (response.data.totalHits <= perPage) {\n//         refs.loadMoreBtnEl.setAttribute('hidden', true);\n//         Notify.warning(\n//           'We are sorry, but you have reached the end of search results.',\n//           optionsNotify\n//         );\n//       }\n//     })\n//     .catch(error => console.log(error));\n// }\n\n// function onLoad() {\n//   if (inputValue === '') {\n//     return;\n//   }\n\n//   page += 1;\n//   console.log(page);\n//   console.log(totalPage);\n//   fetchPhotos(inputValue, perPage, page).then(response => {\n//     const imgMarkUp = createSmallImgMarkup(response.data.hits);\n//     refs.galleryEl.insertAdjacentHTML('beforeend', imgMarkUp);\n//     // //*********************************\n//     const { height: cardHeight } =\n//       refs.galleryEl.firstElementChild.getBoundingClientRect();\n//     window.scrollBy({\n//       top: cardHeight * 2,\n//       behavior: 'smooth',\n//     });\n//     //*************************************\n//     lightbox.refresh();\n//   });\n\n//   if (totalHitsPhotos > 0 && page >= totalPage) {\n//     console.log('Yes');\n//     refs.loadMoreBtnEl.setAttribute('hidden', true);\n//     Notify.warning(\n//       'We are sorry, but you have reached the end of search results.',\n//       optionsNotify\n//     );\n\n//     return;\n//   }\n// }\n","const BASEURL = 'https://pixabay.com/api/';\nconst keyApiPix = '30040272-179178153c29e3da83ceec1ea';\n\nconst KEY = \"5b1449ced393d87bc0a1ea0f9fb4bc3e\";\n\n\n\n\nexport default async function fetchFilm(keyWord, perPage, page) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/550?api_key=${KEY}`\n  );\n\n  return response;\n}"],"names":["console","log","async","keyWord","perPage","page","axios","get","$1f0dc3b9307be026$var$inputEL","document","querySelector"],"version":3,"file":"index.0e40942c.js.map"}